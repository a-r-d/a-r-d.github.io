I"Þ<p>I am talking about this for reference:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">'number'</span> <span class="na">id=</span><span class="s">'ourtest'</span> <span class="nt">/&gt;</span></code></pre></figure>

<p>Did you know according to the HTML5 spec the Number Input validation will cause the value to be read as an empty string if anything but a number is input? So lets suggest a scenario where this sucks: what if I want to allow an empty input OR allow a valid number? Now I canâ€™t do that because if an invalid number is entered and you do something like $(â€˜#ourtestâ€™).val() it will return and empty string (â€˜â€™).</p>

<p>One work around is to set the input to be require and default the value to zero. This will cause anything that is not a number to be read as invalid. However this doesnâ€™t truly accomplish our goal of allowing valid input or no input, now does it?</p>

<p>Example:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">'number'</span> <span class="na">id=</span><span class="s">'ourtest'</span> <span class="na">value=</span><span class="s">'0'</span> <span class="na">required</span><span class="nt">/&gt;</span></code></pre></figure>

<p>Fortunately there is also a â€˜validityâ€™ attribute on browsers that support the more advanced HTML5 inputs. You can do something like the following to check validity:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">function</span> <span class="nx">checkNumber</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">val</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#ourtest</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
	<span class="kd">var</span> <span class="nx">elem</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#ourtest</span><span class="dl">"</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="nx">elem</span> <span class="o">&amp;&amp;</span> <span class="nx">elem</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nx">elem</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">validity</span><span class="p">){</span>
		<span class="c1">// valid</span>
		<span class="k">if</span><span class="p">(</span><span class="nx">val</span> <span class="o">!=</span> <span class="dl">''</span> <span class="o">&amp;&amp;</span> <span class="nx">elem</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">validity</span><span class="p">.</span><span class="nx">valid</span> <span class="o">&amp;&amp;</span> <span class="nx">elem</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">validity</span><span class="p">.</span><span class="nx">badInput</span> <span class="o">==</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
		<span class="c1">// invalid</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">elem</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">validity</span><span class="p">.</span><span class="nx">valid</span> <span class="o">==</span> <span class="kc">false</span> <span class="o">&amp;&amp;</span> <span class="nx">elem</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">validity</span><span class="p">.</span><span class="nx">badInput</span> <span class="o">==</span> <span class="kc">true</span><span class="p">){</span>
			<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
		<span class="c1">// empty</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="c1">// invalid or validity not supported</span>
		<span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span></code></pre></figure>

:ET